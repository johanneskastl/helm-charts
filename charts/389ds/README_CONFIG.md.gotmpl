{{- define "custom.notes" -}}
**This chart is not maintained by the upstream project and any issues with the chart should be raised [here](https://github.com/johanneskastl/helm-charts/issues/)**

By default, this chart uses two secrets for the 389ds server. You need to create those manually before deploying the chart.

The first secret, by default called `389ds-environment`, should contain the [environment variables used for configuring the server](https://hub.docker.com/r/389ds/dirsrv). It could basically look like this:

```yaml
apiVersion: v1
kind: Secret
metadata:
  name: 389ds-environment
  namespace: 389ds
stringData:
  DS_DM_PASSWORD: 'your_password_goes_here'
  DS_SUFFIX_NAME: 'dc=example,dc=org'
  [...]
```

The second secret is used for injecting a valid TLS certificate and key file for use with LDAPS or StartTLS. It needs to be specified in your `values.yaml` file in the `persistence` section. It is used by the `389ds-certs` mount and mounted to `/data/tls/` inside the container.

Specify the name of the TLS secret in your `values.yaml` file like this:

```yaml
persistence:
  389ds-certs:
    name: ldap.example.org-tls
```

This chart creates a ConfigMap containing the current Let's Encrypt root certificate, that is needed as the TLS secrets generated by e.g. [cert-manager](cert-manager.io) do not contain the CA certificate, but the server needs this.

In case you are using certificates from a different CA, please adjust your `values.yaml` file accordingly. Have a look at the [`values.yaml`](./values.yaml) file, but basically you need something like this:

```yaml
configmap:
  letsencrypt-ca:
    enabled: false
  my-own-ca:
    enabled: true
    data:
      ca.crt: |
        -----BEGIN CERTIFICATE-----
        [...]
        -----END CERTIFICATE-----
persistence:
  389ds-ca:
    enabled: true
    # Please note the 389ds prefix here
    name: 389ds-my-own-ca
```

{{- end -}}

{{- define "custom.custom.configuration" -}}
## Custom configuration

N/A

{{- end -}}
